apiVersion: apps/v1
kind: Deployment
metadata:
  name: estudiantes-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: estudiantes-api
  template:
    metadata:
      labels:
        app: estudiantes-api
    spec:
      containers:
      - name: estudiantes-api
        image: angelidk/node  # Imagen actualizada a la que has mencionado
        ports:
        - containerPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "root_password"
        - name: MYSQL_DATABASE
          value: "mi_base_de_datos"
        - name: MYSQL_USER
          value: "usuario"
        - name: MYSQL_PASSWORD
          value: "contrase√±a"
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: estudiantes-sql
          mountPath: /docker-entrypoint-initdb.d
          subPath: estudiantes.sql
---
apiVersion: v1
kind: Service
metadata:
  name: estudiantes-api-service
spec:
  selector:
    app: estudiantes-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
